blueprint:
  name: Smart Multi-Zone Irrigation
  description: >
    Complete irrigation system with up to 4 zones, fixed/sun schedules,
    pump control, soil & rain aborts, water usage, and notifications.
  domain: automation
  input:

    ## ZONES
    zone_1:
      name: Zone 1 Switch
      selector:
        entity:
          domain: switch
          multiple: false
    zone_1_duration:
      name: Zone 1 Default Duration (min)
      default: 10
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes
    zone_1_flow:
      name: Zone 1 Flow Rate (L/min)
      default: 10
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: L/min

    zone_2:
      name: Zone 2 Switch (optional)
      default: []
      selector:
        entity:
          domain: switch
          multiple: false
    zone_2_duration:
      name: Zone 2 Default Duration (min)
      default: 10
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes
    zone_2_flow:
      name: Zone 2 Flow Rate (L/min)
      default: 10
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: L/min

    zone_3:
      name: Zone 3 Switch (optional)
      default: []
      selector:
        entity:
          domain: switch
          multiple: false
    zone_3_duration:
      name: Zone 3 Default Duration (min)
      default: 10
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes
    zone_3_flow:
      name: Zone 3 Flow Rate (L/min)
      default: 10
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: L/min

    zone_4:
      name: Zone 4 Switch (optional)
      default: []
      selector:
        entity:
          domain: switch
          multiple: false
    zone_4_duration:
      name: Zone 4 Default Duration (min)
      default: 10
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes
    zone_4_flow:
      name: Zone 4 Flow Rate (L/min)
      default: 10
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: L/min

    ## SCHEDULES
    schedule_helper:
      name: Schedule Helper (optional)
      default: []
      selector:
        entity:
          domain: schedule

    fixed_time_1:
      name: Fixed Time 1
      default: "06:00:00"
      selector:
        time: {}
    fixed_time_2:
      name: Fixed Time 2
      default: "12:00:00"
      selector:
        time: {}
    fixed_time_3:
      name: Fixed Time 3
      default: "18:00:00"
      selector:
        time: {}

    run_at_sunrise:
      name: Run at Sunrise
      default: false
      selector:
        boolean: {}
    sunrise_offset:
      name: Sunrise Offset (min)
      default: 0
      selector:
        number:
          min: -120
          max: 120
          unit_of_measurement: minutes

    run_at_sunset:
      name: Run at Sunset
      default: false
      selector:
        boolean: {}
    sunset_offset:
      name: Sunset Offset (min)
      default: 0
      selector:
        number:
          min: -120
          max: 120
          unit_of_measurement: minutes

    ## PUMP CONTROL
    pump_switch:
      name: Pump Switch (optional)
      default: []
      selector:
        entity:
          domain: switch
    pump_delay:
      name: Pump Startup Delay (sec)
      default: 5
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
    water_level_sensor:
      name: Water Level Sensor (optional)
      default: []
      selector:
        entity:
          domain: sensor
    min_water_level:
      name: Min Water Level (%)
      default: 20
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"

    ## ABORT CONDITIONS
    soil_sensor:
      name: Soil Moisture Sensor (optional)
      default: []
      selector:
        entity:
          domain: sensor
    soil_threshold:
      name: Soil Moisture Threshold (%)
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"

    rain_sensor:
      name: Rain Sensor (optional)
      default: []
      selector:
        entity:
          domain: binary_sensor

    ## NOTIFICATIONS & DEBUG
    notify_target:
      name: Notify Service (e.g. notify.mobile)
      default: []
      selector:
        text: {}
    debug_logging:
      name: Debug Logging
      default: false
      selector:
        boolean: {}
    auto_reset:
      name: Auto Reset Manual Overrides
      default: true
      selector:
        boolean: {}

mode: restart

trigger:
  - platform: time
    at: !input fixed_time_1
  - platform: time
    at: !input fixed_time_2
  - platform: time
    at: !input fixed_time_3
  - platform: sun
    event: sunrise
    offset: "!input sunrise_offset"
    enabled: !input run_at_sunrise
  - platform: sun
    event: sunset
    offset: "!input sunset_offset"
    enabled: !input run_at_sunset
  - platform: state
    entity_id: !input schedule_helper
    to: "on"

variables:
  zones:
    - entity: !input zone_1
      duration: !input zone_1_duration
      flow: !input zone_1_flow
    - entity: !input zone_2
      duration: !input zone_2_duration
      flow: !input zone_2_flow
    - entity: !input zone_3
      duration: !input zone_3_duration
      flow: !input zone_3_flow
    - entity: !input zone_4
      duration: !input zone_4_duration
      flow: !input zone_4_flow

condition:
  - condition: or
    conditions:
      - condition: state
        entity_id: !input schedule_helper
        state: "on"
      - condition: time

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not is_state(\"!input rain_sensor\", 'on') }}"
          - condition: template
            value_template: "{{ (states('!input soil_sensor') | float(0)) < (!input soil_threshold | float) }}"
          - condition: template
            value_template: "{{ (states('!input water_level_sensor') | float(100)) >= (!input min_water_level | float) }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ !input pump_switch != [] }}"
            then:
              - service: switch.turn_on
                target:
                  entity_id: !input pump_switch
              - delay:
                  seconds: !input pump_delay

          - repeat:
              for_each: "{{ zones }}"
              sequence:
                - service: switch.turn_on
                  target:
                    entity_id: "{{ repeat.item.entity }}"
                - delay:
                    minutes: "{{ repeat.item.duration }}"
                - service: switch.turn_off
                  target:
                    entity_id: "{{ repeat.item.entity }}"
                - variables:
                    zone_usage: "{{ repeat.item.duration | float * repeat.item.flow | float }}"
                - service: input_number.set_value
                  target:
                    entity_id: "input_number.{{ repeat.item.entity.split('.')[-1] }}_water_usage"
                  data:
                    value: "{{ zone_usage }}"
                - service: persistent_notification.create
                  data:
                    title: "Irrigation Zone Completed"
                    message: "{{ repeat.item.entity }} ran for {{ repeat.item.duration }} min ({{ zone_usage }} L)."

          - if:
              - condition: template
                value_template: "{{ !input pump_switch != [] }}"
            then:
              - service: switch.turn_off
                target:
                  entity_id: !input pump_switch

          - service: persistent_notification.create
            data:
              title: "Irrigation Cycle Completed"
              message: "All enabled zones have been irrigated."

    default:
      - service: persistent_notification.create
        data:
          title: "Irrigation Skipped"
          message: "Conditions not met (rain, soil moisture, or water level)."

# -----------------------------
# Extra Definitions: Water Usage Sensors & Utility Meters
# -----------------------------

sensor:
  - platform: template
    sensors:
      zone_1_daily_usage:
        friendly_name: "Zone 1 Daily Usage"
        unit_of_measurement: "L"
        value_template: "{{ states('input_number.zone_1_water_usage') | float(0) }}"
      zone_2_daily_usage:
        friendly_name: "Zone 2 Daily Usage"
        unit_of_measurement: "L"
        value_template: "{{ states('input_number.zone_2_water_usage') | float(0) }}"
      zone_3_daily_usage:
        friendly_name: "Zone 3 Daily Usage"
        unit_of_measurement: "L"
        value_template: "{{ states('input_number.zone_3_water_usage') | float(0) }}"
      zone_4_daily_usage:
        friendly_name: "Zone 4 Daily Usage"
        unit_of_measurement: "L"
        value_template: "{{ states('input_number.zone_4_water_usage') | float(0) }}"

utility_meter:
  zone_1_daily:
    source: sensor.zone_1_daily_usage
    cycle: daily
  zone_1_weekly:
    source: sensor.zone_1_daily_usage
    cycle: weekly
  zone_1_monthly:
    source: sensor.zone_1_daily_usage
    cycle: monthly

  zone_2_daily:
    source: sensor.zone_2_daily_usage
    cycle: daily
  zone_2_weekly:
    source: sensor.zone_2_daily_usage
    cycle: weekly
  zone_2_monthly:
    source: sensor.zone_2_daily_usage
    cycle: monthly

  zone_3_daily:
    source: sensor.zone_3_daily_usage
    cycle: daily
  zone_3_weekly:
    source: sensor.zone_3_daily_usage
    cycle: weekly
  zone_3_monthly:
    source: sensor.zone_3_daily_usage
    cycle: monthly

  zone_4_daily:
    source: sensor.zone_4_daily_usage
    cycle: daily
  zone_4_weekly:
    source: sensor.zone_4_daily_usage
    cycle: weekly
  zone_4_monthly:
    source: sensor.zone_4_daily_usage
    cycle: monthly
