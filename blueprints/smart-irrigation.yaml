blueprint:
  name: Smart Garden Irrigation with Flexible Start Time
  description: >
    🌱 Comprehensive smart garden irrigation system supporting multiple zones (lawn, raised bed, vegetables, shrubs)
    with flexible scheduling, weather checks, and water source management. Features automatic rain/moisture detection,
    pump control, water consumption tracking, and notifications. Supports both parallel and sequential watering modes
    with manual override capabilities.
  domain: automation
  input:

    # Zone Configuration - Lawn
    lawn_zones:
      name: 🌾 Lawn Zones (Valve or Switch)
      description: Select one or more switch/valve entities that control lawn irrigation. These will be activated together when lawn watering is triggered.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            - domain: switch
            - domain: valve

    manual_lawn_select:
      name: 🌾 Manual Lawn Control (Input Select)
      description: Input select entity for manual lawn control. Should have options like "Stop" and "Start" to allow manual activation of lawn watering.
      selector:
        entity:
          domain: input_select

    manual_lawn_duration:
      name: 🌾 Manual Lawn Duration (Minutes, 0 = automatic)
      description: Duration in minutes for lawn watering. Set to 0 to use automatic duration (10 minutes default), or specify custom duration.
      default: 0
      selector:
        number:
          min: 0
          max: 120

    # Zone Configuration - Raised Bed
    raised_bed_zones:
      name: 🪴 Raised Bed Zones (Valve or Switch)
      description: Select one or more switch/valve entities that control raised bed irrigation. These will be activated together when raised bed watering is triggered.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            - domain: switch
            - domain: valve

    manual_raised_bed_select:
      name: 🪴 Manual Raised Bed Control (Input Select)
      description: Input select entity for manual raised bed control. Should have options like "Stop" and "Start" to allow manual activation of raised bed watering.
      selector:
        entity:
          domain: input_select

    manual_raised_bed_duration:
      name: 🪴 Manual Raised Bed Duration (Minutes, 0 = automatic)
      description: Duration in minutes for raised bed watering. Set to 0 to use automatic duration (5 minutes default), or specify custom duration.
      default: 0
      selector:
        number:
          min: 0
          max: 120

    # Zone Configuration - Vegetables
    vegetable_zones:
      name: 🥕 Vegetable Zones (Valve or Switch)
      description: Select one or more switch/valve entities that control vegetable garden irrigation. These will be activated together when vegetable watering is triggered.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            - domain: switch
            - domain: valve

    manual_vegetable_select:
      name: 🥕 Manual Vegetable Control (Input Select)
      description: Input select entity for manual vegetable garden control. Should have options like "Stop" and "Start" to allow manual activation of vegetable watering.
      selector:
        entity:
          domain: input_select

    manual_vegetable_duration:
      name: 🥕 Manual Vegetable Duration (Minutes, 0 = automatic)
      description: Duration in minutes for vegetable garden watering. Set to 0 to use automatic duration (5 minutes default), or specify custom duration.
      default: 0
      selector:
        number:
          min: 0
          max: 120

    # Zone Configuration - Shrubs
    shrub_zones:
      name: 🌳 Shrub Zones (Valve or Switch)
      description: Select one or more switch/valve entities that control shrub irrigation. These will be activated together when shrub watering is triggered.
      default: []
      selector:
        entity:
          multiple: true
          filter:
            - domain: switch
            - domain: valve

    manual_shrub_select:
      name: 🌳 Manual Shrub Control (Input Select)
      description: Input select entity for manual shrub control. Should have options like "Stop" and "Start" to allow manual activation of shrub watering.
      selector:
        entity:
          domain: input_select

    manual_shrub_duration:
      name: 🌳 Manual Shrub Duration (Minutes, 0 = automatic)
      description: Duration in minutes for shrub watering. Set to 0 to use automatic duration (7 minutes default), or specify custom duration.
      default: 0
      selector:
        number:
          min: 0
          max: 120

    # Water Source Configuration
    water_source:
      name: 💧 Select Water Source
      description: Choose your water source. Select "Tap Water" for unlimited mains water supply, or "Rainwater/Cistern" for tank-based systems with level monitoring.
      default: "tap_water"
      selector:
        select:
          options:
            - label: Tap Water (Unlimited Supply)
              value: tap_water
            - label: Rainwater / Cistern (Tank-based)
              value: rainwater

    min_water_level:
      name: 🪣 Minimum Water Level for Pump Activation
      description: Minimum water level required to activate the pump (only relevant for rainwater/cistern). Units should match your water level sensor (liters, gallons, percentage, etc.).
      default: 100
      selector:
        number:
          min: 0
          max: 50000

    # Pump Configuration
    pump:
      name: ⚡ Pump (Optional)
      description: Switch entity that controls your irrigation pump. Leave empty if you don't have a pump or it's always on. The pump will be activated before watering starts and turned off when complete.
      default: null
      selector:
        entity:
          domain: switch

    pump_delay:
      name: ⚡ Pump Delay (Seconds)
      description: Delay in seconds after starting the pump before opening valves. This allows the pump to build up pressure for optimal irrigation performance.
      default: 5
      selector:
        number:
          min: 1
          max: 60

    # Water Level Monitoring
    water_level_sensor:
      name: 🪣 Water Level Sensor (Optional)
      description: Sensor that reports water tank level. Only required when using rainwater/cistern as water source. Should report level in units matching your minimum water level setting.
      default: null
      selector:
        entity:
          domain: sensor

    # Soil Moisture Configuration
    soil_moisture_sensor:
      name: 💧 Soil Moisture Sensor (Optional)
      description: Sensor that reports soil moisture as a percentage (0-100%). Watering will be skipped if moisture level is above the threshold. Helps conserve water and prevent overwatering.
      default: null
      selector:
        entity:
          domain: sensor

    use_soil_moisture:
      name: 💧 Use Soil Moisture Check?
      description: Enable automatic soil moisture checking before watering. If enabled, watering will be skipped when soil moisture is above the threshold.
      default: false
      selector:
        boolean: {}

    soil_moisture_threshold:
      name: 💧 Soil Moisture Threshold (%)
      description: Skip watering if soil moisture percentage is above this value. Typical values are 30-50% depending on plant needs and sensor calibration.
      default: 30
      selector:
        number:
          min: 0
          max: 100

    # Rain Detection Configuration
    rain_threshold:
      name: 🌧️ Rain Amount Threshold (mm)
      description: Skip watering if recent rainfall amount exceeds this threshold in millimeters. Helps prevent unnecessary watering after rain.
      default: 10
      selector:
        number:
          min: 0
          max: 100

    rain_amount_sensor:
      name: 🌧️ Rain Amount Sensor (Optional)
      description: Sensor that reports recent rainfall amount in millimeters. Used to skip watering when sufficient rain has occurred. Can be from weather integration or physical rain gauge.
      default: null
      selector:
        entity:
          domain: sensor

    rain_live_sensor:
      name: 🌧️ Rain Detection Sensor (Optional)
      description: Binary sensor that detects active rain (on = rain detected, off = no rain). Watering will be immediately stopped if rain is detected during operation.
      default: null
      selector:
        entity:
          domain: binary_sensor

    # Water Consumption Tracking
    water_consumption_per_minute:
      name: 📊 Water Consumption per Minute (Liters)
      description: Optional: Average water consumption rate in liters per minute for all zones combined. Used to calculate and report total water usage after each watering cycle.
      default: 0
      selector:
        number:
          min: 0
          max: 100
          step: 0.1

    enable_water_consumption:
      name: 📊 Enable Water Consumption Calculation?
      description: Enable automatic calculation and notification of water usage after each watering cycle. Requires water consumption rate to be set above.
      default: false
      selector:
        boolean: {}

    # Flexible Start Time Configuration
    start_time_option:
      name: ⏰ Choose Start Time Option
      description: Select how automatic watering should be scheduled. Choose fixed time for specific schedule, night for 2 AM watering, or sunrise/sunset with custom offset.
      default: fixed_time
      selector:
        select:
          options:
            - label: Fixed Time (manual input)
              value: fixed_time
            - label: Night (02:00 AM)
              value: night
            - label: Sunset with Offset
              value: sunset
            - label: Sunrise with Offset
              value: sunrise

    fixed_start_time:
      name: ⏰ Fixed Start Time
      description: Specific time to start automatic watering (only used when 'Fixed Time' is selected above). Format: HH:MM (24-hour format).
      default: "06:00:00"
      selector:
        time: {}

    start_time_offset:
      name: ⏰ Offset for Sunrise/Sunset (Minutes)
      description: Time offset in minutes for sunrise/sunset scheduling. Positive values = later (after sunrise/sunset), negative values = earlier (before sunrise/sunset).
      default: 0
      selector:
        number:
          min: -120
          max: 120

    # Watering Mode Configuration
    parallel_watering:
      name: 🤖 Irrigation Mode - Parallel or Sequential?
      description: Choose watering mode. True = Parallel (all zones water simultaneously), False = Sequential (zones water one after another with individual durations).
      default: false
      selector:
        boolean: {}

trigger:
  - platform: time
    at: !input fixed_start_time
    id: fixed_time
  - platform: sun
    event: sunset
    offset: !input start_time_offset
    id: sunset
  - platform: sun
    event: sunrise
    offset: !input start_time_offset
    id: sunrise
  - platform: time
    at: "02:00:00"
    id: night

variables:
  water_source: !input water_source
  min_level: !input min_water_level
  use_soil: !input use_soil_moisture
  soil_sensor: !input soil_moisture_sensor
  soil_threshold: !input soil_moisture_threshold
  rain_sensor: !input rain_amount_sensor
  rain_live_sensor: !input rain_live_sensor
  rain_threshold: !input rain_threshold
  zones_lawn: !input lawn_zones
  zones_raised: !input raised_bed_zones
  zones_veg: !input vegetable_zones
  zones_shrub: !input shrub_zones
  manual_lawn: !input manual_lawn_select
  manual_raised: !input manual_raised_bed_select
  manual_veg: !input manual_vegetable_select
  manual_shrub: !input manual_shrub_select
  pump: !input pump
  pump_delay: !input pump_delay
  fill_sensor: !input water_level_sensor
  water_calc: !input enable_water_consumption
  water_rate: !input water_consumption_per_minute
  parallel: !input parallel_watering
  start_time_option: !input start_time_option
  manual_lawn_duration: !input manual_lawn_duration
  manual_raised_bed_duration: !input manual_raised_bed_duration
  manual_vegetable_duration: !input manual_vegetable_duration
  manual_shrub_duration: !input manual_shrub_duration

condition:
  - condition: or
    conditions:
      - condition: template
        value_template: "{{ trigger.id == start_time_option }}"
      - condition: template
        value_template: >
          {{ manual_lawn is defined and states(manual_lawn) != 'off' or
             manual_raised is defined and states(manual_raised) != 'off' or
             manual_veg is defined and states(manual_veg) != 'off' or
             manual_shrub is defined and states(manual_shrub) != 'off' }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ water_source == 'rainwater' and fill_sensor is defined and
                 (states(fill_sensor) | float(0)) < min_level }}
        sequence:
          - service: persistent_notification.create
            data:
              title: Irrigation blocked
              message: Fill level too low for pump!

      - conditions:
          - condition: template
            value_template: >
              {{ use_soil and soil_sensor is defined and
                 (states(soil_sensor) | float(0)) > soil_threshold }}
        sequence:
          - service: persistent_notification.create
            data:
              title: Irrigation not necessary
              message: Soil moisture above threshold.

      - conditions:
          - condition: template
            value_template: >
              {{ rain_sensor is defined and (states(rain_sensor) | float(0)) > rain_threshold }}
        sequence:
          - service: persistent_notification.create
            data:
              title: Irrigation skipped
              message: Rain amount above threshold.

      - conditions:
          - condition: template
            value_template: >
              {{ rain_live_sensor is defined and is_state(rain_live_sensor, 'on') }}
        sequence:
          - service: persistent_notification.create
            data:
              title: Irrigation stopped
              message: Rain detected by live sensor.

      - conditions: []
        sequence:
          - if:
              - condition: template
                value_template: "{{ pump is defined }}"
            then:
              - service: switch.turn_on
                target:
                  entity_id: !input pump
              - delay:
                  seconds: !input pump_delay

          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ parallel }}"
                sequence:
                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ zones_lawn + zones_raised + zones_veg + zones_shrub }}"
              - conditions: []
                sequence:
                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ zones_lawn }}"
                  - delay:
                      minutes: "{{ manual_lawn_duration if manual_lawn_duration > 0 else 10 }}"
                  - service: homeassistant.turn_off
                    target:
                      entity_id: "{{ zones_lawn }}"

                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ zones_raised }}"
                  - delay:
                      minutes: "{{ manual_raised_bed_duration if manual_raised_bed_duration > 0 else 5 }}"
                  - service: homeassistant.turn_off
                    target:
                      entity_id: "{{ zones_raised }}"

                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ zones_veg }}"
                  - delay:
                      minutes: "{{ manual_vegetable_duration if manual_vegetable_duration > 0 else 5 }}"
                  - service: homeassistant.turn_off
                    target:
                      entity_id: "{{ zones_veg }}"

                  - service: homeassistant.turn_on
                    target:
                      entity_id: "{{ zones_shrub }}"
                  - delay:
                      minutes: "{{ manual_shrub_duration if manual_shrub_duration > 0 else 7 }}"
                  - service: homeassistant.turn_off
                    target:
                      entity_id: "{{ zones_shrub }}"

          - if:
              - condition: template
                value_template: "{{ pump is defined }}"
            then:
              - service: switch.turn_off
                target:
                  entity_id: !input pump

          - if:
              - condition: template
                value_template: "{{ water_calc and water_rate > 0 }}"
            then:
              - service: persistent_notification.create
                data:
                  title: Water usage
                  message: >
                    Water used: {{
                      ( (manual_lawn_duration if manual_lawn_duration > 0 else 10) +
                        (manual_raised_bed_duration if manual_raised_bed_duration > 0 else 5) +
                        (manual_vegetable_duration if manual_vegetable_duration > 0 else 5) +
                        (manual_shrub_duration if manual_shrub_duration > 0 else 7) 
                      ) * water_rate
                    }} liters.

mode: single
